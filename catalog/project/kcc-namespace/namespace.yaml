# Create namespace in the Kubernetes cluster to manage KCC resources in this project
apiVersion: v1
kind: Namespace
metadata:
  name: project-name # kpt-set: ${project-name}
  annotations:
    cnrm.cloud.google.com/project-id: project-id # kpt-set: ${project-id}
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: project-name-projectcreator-permissions # kpt-set: ${project-name}-projectcreator-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone/v0.2.0
    cnrm.cloud.google.com/project-id: management-project-id # kpt-set: ${management-project-id}
spec:
  member: "serviceAccount:project-name-sa@management-project-id.iam.gserviceaccount.com" # kpt-set: serviceAccount:${project-name}-sa@${management-project-id}.iam.gserviceaccount.com
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Organization
    external: "123456789012" # kpt-set: ${org-id}
  role: roles/resourcemanager.projectCreator
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: project-name-projectmover-permissions # kpt-set: ${project-name}-projectmover-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone/v0.2.0
    cnrm.cloud.google.com/project-id: management-project-id # kpt-set: ${management-project-id}
spec:
  member: "serviceAccount:project-name-sa@management-project-id.iam.gserviceaccount.com" # kpt-set: serviceAccount:${project-name}-sa@${management-project-id}.iam.gserviceaccount.com
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Organization
    external: "123456789012" # kpt-set: ${org-id}
  role: roles/resourcemanager.projectMover
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: project-name-projectdeleter-permissions # kpt-set: ${project-name}-projectdeleter-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone/v0.2.0
    cnrm.cloud.google.com/project-id: management-project-id # kpt-set: ${management-project-id}
spec:
  member: "serviceAccount:project-name-sa@management-project-id.iam.gserviceaccount.com" # kpt-set: serviceAccount:${project-name}-sa@${management-project-id}.iam.gserviceaccount.com
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Organization
    external: "123456789012" # kpt-set: ${org-id}
  role: roles/resourcemanager.projectDeleter
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: project-name-billinguser-permissions # kpt-set: ${project-name}-billinguser-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: management-project-id # kpt-set: ${management-project-id}
spec:
  member: "serviceAccount:project-name-sa@management-project-id.iam.gserviceaccount.com" # kpt-set: serviceAccount:${project-name}-sa@${management-project-id}.iam.gserviceaccount.com
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Organization
    external: "123456789012" # kpt-set: ${org-id}
  role: roles/billing.user
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: project-name-source-reader # kpt-set: ${project-name}-source-reader
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: management-project-id # kpt-set: ${management-project-id}
spec:
  member: "serviceAccount:project-name-sa@management-project-id.iam.gserviceaccount.com" # kpt-set: serviceAccount:${project-name}-sa@${management-project-id}.iam.gserviceaccount.com
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: SourceRepoRepository
    name: project-id # kpt-set: ${project-id}
  role: roles/source.reader
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: project-name-serviceusageadmin-permissions # kpt-set: ${project-name}-serviceusageadmin-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: management-project-id # kpt-set: ${management-project-id}
spec:
  member: "serviceAccount:project-name-sa@management-project-id.iam.gserviceaccount.com" # kpt-set: serviceAccount:${project-name}-sa@${management-project-id}.iam.gserviceaccount.com
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Organization
    external: "123456789012" # kpt-set: ${org-id}
  role: roles/serviceusage.serviceUsageAdmin
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: project-name-workload-identity-binding # kpt-set: ${project-name}-workload-identity-binding
  namespace: config-control
  annotations:
    cnrm.cloud.google.com/project-id: management-project-id # kpt-set: ${management-project-id}
spec:
  member: management-project-id.svc.id.goog[cnrm-system/cnrm-controller-manager-project-name] # kpt-set: serviceAccount:${management-project-id}.svc.id.goog[cnrm-system/cnrm-controller-manager-${project-name}]
  resourceRef:
    name: project-name-sa # kpt-set: ${project-name}-sa
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
  role: roles/iam.workloadIdentityUser